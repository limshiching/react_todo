{"ast":null,"code":"var _jsxFileName = \"/Users/limshiching/Desktop/react-todo/src/components/TodoForm.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [],\n      inputText: ''\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const item = {\n        'task': this.state.inputText,\n        'done': false\n      };\n      console.log(item);\n      this.setState({\n        inputText: '',\n        items: [...this.state.items, item]\n      });\n    };\n\n    this.handleTyping = e => {\n      this.setState({\n        inputText: e.target.value\n      });\n    };\n\n    this.handleDelete = selectedIndex => {\n      // let itemsClone = [...this.state.items]\n      // itemsClone = item.splice()\n      const filteredItems = this.state.items.filter((item, index) => {\n        return index !== selectedIndex;\n      });\n      this.setState({\n        items: filteredItems\n      });\n    };\n\n    this.handleComplete = selectedItem => {\n      const updatedItems = this.state.items.filter((item, index) => {\n        return item !== selectedItem;\n      });\n      this.setState({\n        items: updatedItems\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state.items);\n    const inputText = this.state.inputText;\n    return React.createElement(\"div\", {\n      className: \"m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"To-do List\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Task\",\n      value: inputText,\n      onChange: this.handleTyping,\n      type: \"text\",\n      name: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !inputText.length,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Add Task \"), inputText.length < 4 && inputText.length > 1 && React.createElement(\"p\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Must be more than 3 characters\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.items.map((item, index) => {\n      return React.createElement(TodoItem, {\n        id: index,\n        key: index,\n        handleDelete: this.handleDelete,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/limshiching/Desktop/react-todo/src/components/TodoForm.js"],"names":["React","Component","TodoItem","TodoForm","state","items","inputText","handleSubmit","e","preventDefault","item","console","log","setState","handleTyping","target","value","handleDelete","selectedIndex","filteredItems","filter","index","handleComplete","selectedItem","updatedItems","render","length","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\n\nclass TodoForm extends Component {\n    state = {\n        items: [],\n        inputText: ''\n    }\n\nhandleSubmit = e => {\n    e.preventDefault ()\n    const item = {\n        'task':this.state.inputText,\n        'done':false\n    }\n    console.log(item)\n\n    this.setState({\n        inputText: '',\n        items: [...this.state.items, item]\n    });\n}\n\nhandleTyping = e => {\n    this.setState({\n        inputText: e.target.value\n    })\n}\n\nhandleDelete = selectedIndex => {\n\n    // let itemsClone = [...this.state.items]\n    // itemsClone = item.splice()\n\n    const filteredItems = this.state.items.filter((item, index) => {\n        return index !== selectedIndex\n    })\n    \n    this.setState({\n        items: filteredItems\n    })\n}\n\nhandleComplete = selectedItem => {\n\n    const updatedItems = this.state.items.filter((item, index) => {\n        return item !== selectedItem\n    })\n\n    this.setState({\n        items: updatedItems\n    })\n}\n\n\n    render() {\n        console.log(this.state.items)\n        const { inputText } = this.state\n        return (\n            <div className=\"m-3\">\n            <h1>To-do List</h1>\n                    <form onSubmit={this.handleSubmit}>\n                        <input \n                            placeholder=\"Task\"\n                            value={inputText}\n                            onChange={this.handleTyping}\n                            type=\"text\"\n                            name=\"message\"\n                        />\n                        <button disabled={!inputText.length} type=\"submit\"> Add Task </button>\n                        {\n                            inputText.length < 4 && inputText.length > 1 &&\n                            <p className=\"text-danger\">Must be more than 3 characters</p>\n                        }\n\n                        <ul>\n                            {\n                                this.state.items.map((item, index) => {\n                                    return (\n                                        <TodoItem id={index} key={index} handleDelete={this.handleDelete} item={item}/>\n                                    )\n                                })\n                            }\n                        </ul>   \n                       \n                        \n                    </form>\n                </div>\n        )\n    }\n}\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}