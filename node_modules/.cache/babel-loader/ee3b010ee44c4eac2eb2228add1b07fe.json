{"ast":null,"code":"var _jsxFileName = \"/Users/limshiching/Desktop/react-todo/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: []\n    };\n\n    this.addItem = item => {\n      const newList = [...this.state.items];\n      const todo = {\n        'task': item,\n        'done': false\n      };\n      newList.push(todo);\n      this.setState({\n        items: newList\n      });\n    };\n\n    this.handleDelete = selectedIndex => {\n      // let itemsClone = [...this.state.items]\n      // itemsClone = item.splice()\n      const filteredItems = this.state.items.filter((item, index) => {\n        return index !== selectedIndex;\n      });\n      this.setState({\n        items: filteredItems\n      });\n    };\n\n    this.handleComplete = selectedItem => {\n      const updatedList = [...this.state.items];\n      let todo = updatedList[selectedItem];\n      todo.done = !todo.done;\n      this.setState({\n        items: updatedList\n      });\n    };\n  }\n\n  render() {\n    const items = this.state.items;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(TodoForm, {\n      items: items,\n      addItem: this.addItem,\n      handleDelete: this.handleDelete,\n      handleComplete: this.handleComplete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/limshiching/Desktop/react-todo/src/App.js"],"names":["React","TodoForm","App","Component","state","items","addItem","item","newList","todo","push","setState","handleDelete","selectedIndex","filteredItems","filter","index","handleComplete","selectedItem","updatedList","done","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,0BAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE;AADD,KADwB;;AAAA,SAKhCC,OALgC,GAKrBC,IAAD,IAAU;AAClB,YAAMC,OAAO,GAAG,CAAC,GAAG,KAAKJ,KAAL,CAAWC,KAAf,CAAhB;AACA,YAAMI,IAAI,GAAG;AACX,gBAAQF,IADG;AAEX,gBAAQ;AAFG,OAAb;AAIAC,MAAAA,OAAO,CAACE,IAAR,CAAaD,IAAb;AACA,WAAKE,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEG;AADK,OAAd;AAGD,KAf+B;;AAAA,SAgBhCI,YAhBgC,GAgBjBC,aAAa,IAAI;AAE9B;AACA;AAEA,YAAMC,aAAa,GAAG,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,CAAwB,CAACR,IAAD,EAAOS,KAAP,KAAiB;AAC7D,eAAOA,KAAK,KAAKH,aAAjB;AACD,OAFqB,CAAtB;AAIA,WAAKF,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAES;AADK,OAAd;AAGD,KA5B+B;;AAAA,SA8BhCG,cA9BgC,GA8BfC,YAAY,IAAI;AAC/B,YAAMC,WAAW,GAAG,CAAC,GAAG,KAAKf,KAAL,CAAWC,KAAf,CAApB;AACA,UAAII,IAAI,GAAGU,WAAW,CAACD,YAAD,CAAtB;AACAT,MAAAA,IAAI,CAACW,IAAL,GAAY,CAACX,IAAI,CAACW,IAAlB;AACA,WAAKT,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEc;AADK,OAAd;AAID,KAtC+B;AAAA;;AAyChCE,EAAAA,MAAM,GAAG;AAAA,UACChB,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAwB,MAAA,OAAO,EAAE,KAAKC,OAAtC;AAA+C,MAAA,YAAY,EAAE,KAAKM,YAAlE;AAAgF,MAAA,cAAc,EAAE,KAAKK,cAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAWD;;AAtD+B;;AAyDlC,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm.js';\n\nclass App extends React.Component {\n  state = {\n    items: []\n  }\n\n  addItem = (item) => {\n    const newList = [...this.state.items]\n    const todo = {\n      'task': item,\n      'done': false\n    }\n    newList.push(todo)\n    this.setState({\n      items: newList\n    })\n  }\n  handleDelete = selectedIndex => {\n\n    // let itemsClone = [...this.state.items]\n    // itemsClone = item.splice()\n\n    const filteredItems = this.state.items.filter((item, index) => {\n      return index !== selectedIndex\n    })\n\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  handleComplete = selectedItem => {\n    const updatedList = [...this.state.items]\n    let todo = updatedList[selectedItem]\n    todo.done = !todo.done\n    this.setState({\n      items: updatedList\n    })\n\n  }\n\n\n  render() {\n    const { items } = this.state\n    return (\n      <div className=\"App\" >\n\n\n\n        <TodoForm items={items} addItem={this.addItem} handleDelete={this.handleDelete} handleComplete={this.handleComplete}\n        />\n\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}